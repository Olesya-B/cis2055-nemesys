@using Microsoft.AspNetCore.Identity
@inject UserManager<NemesysZ2.Models.ApplicationUser> UserManager


@model NemesysZ2.ViewModels.ReportsViewModel

<h1>@Model.Title</h1>
<div class="card" style="width: 90%;padding:20px; margin:20px; ">
    <img class="card-img-top" src="@Model.ImageUrl" alt="Image for @Model.Title" style="width: 40%; align-self:center" />
    <div class="card-body">

        <h3 class="card-title">@Model.Title In <strong>@Model.Category.Name</strong></h3>
        <div class="container">
            <div class="row align-items-start">
                <div class="col">
                    Location: <strong>@Model.Location</strong>
                </div>
                <div class="col">
                    By <strong>@Model.Author.Name</strong>
                </div>
                <div class="col">
                    On <strong>@Model.Author.Email</strong>
                </div>
            </div>

            <br />
            <p class="card-subtitle">Posted On: @Model.CreatedDate.ToShortDateString() Spotted On: <strong>@Model.DateSpotted.ToShortDateString()</strong></p>
            <br />
            <div>
                <hr />
                <h5>Report information</h5>

                <p class="text-info">@Model.Content</p>
            </div>

            <p class="col"> Number of Likes: @Model.NoOfLikes </p>

            <form method="post" asp-controller="BlogPost" asp-action="Likes" asp-route-id="@Model.Id">
                <button type="submit" class="btn btn-primary"> Like Post </button>
            </form>

            <div class="comments-section">
                @{
                    await Html.RenderPartialAsync("Comment", new CommentViewModel { PostId = Model.Id });
                }
                @foreach (var c in Model.Comments)
                {
                    <p>
                        @c.Message --- @c.Created
                    </p>
                }
            </div>


        </div>
    </div>
</div>


<a asp-controller="BlogPost" asp-action="Index" class="btn btn-primary">Back</a>
@if (User.Identity.IsAuthenticated)
{
    var currentUser = await UserManager.GetUserAsync(User);
    bool currRole = await UserManager.IsInRoleAsync(currentUser, "Administrator");


    if (UserManager.GetUserAsync(User).Result.Id == Model.Author.Id || currRole == true)
    {
        <a asp-controller="BlogPost" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary">Edit</a>
    }

    if (currRole == true)
    {
        <a asp-controller="BlogPost" asp-action="EditStatus" asp-route-id="@Model.Id" class="btn btn-outline-primary">EditStatus</a>
    }


}

